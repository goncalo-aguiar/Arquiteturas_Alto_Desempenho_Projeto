vendor_name = ModelSim
source_file = 1, C:/Users/goncs/Desktop/AAD_Projeto1/DEC/parallel_decoder.vhd
source_file = 1, C:/Users/goncs/Desktop/AAD_Projeto1/DEC/Waveform.vwf
source_file = 1, C:/Users/goncs/Desktop/AAD_Projeto1/DEC/Waveform1.vwf
source_file = 1, C:/Users/goncs/Desktop/AAD_Projeto1/DEC/Waveform2.vwf
source_file = 1, C:/Users/goncs/Desktop/AAD_Projeto1/DEC/popCounter_8bit.vhd
source_file = 1, C:/Users/goncs/Desktop/AAD_Projeto1/DEC/arithmetic.vhd
source_file = 1, C:/Users/goncs/Desktop/AAD_Projeto1/DEC/simpleLogic.vhd
source_file = 1, C:/Users/goncs/Desktop/AAD_Projeto1/DEC/partial_encoder.vhd
source_file = 1, C:/Users/goncs/Desktop/AAD_Projeto1/DEC/Waveform3.vwf
source_file = 1, c:/intelfpga_lite/19.1/quartus/libraries/vhdl/ieee/prmtvs_b.vhd
source_file = 1, c:/intelfpga_lite/19.1/quartus/libraries/vhdl/ieee/prmtvs_p.vhd
source_file = 1, c:/intelfpga_lite/19.1/quartus/libraries/vhdl/ieee/timing_b.vhd
source_file = 1, c:/intelfpga_lite/19.1/quartus/libraries/vhdl/ieee/timing_p.vhd
source_file = 1, C:/Users/goncs/Desktop/AAD_Projeto1/DEC/db/parallel_decoder.cbx.xml
design_name = hard_block
design_name = parallel_decoder
instance = comp, \m[0]~output\, m[0]~output, parallel_decoder, 1
instance = comp, \m[1]~output\, m[1]~output, parallel_decoder, 1
instance = comp, \m[2]~output\, m[2]~output, parallel_decoder, 1
instance = comp, \m[3]~output\, m[3]~output, parallel_decoder, 1
instance = comp, \v~output\, v~output, parallel_decoder, 1
instance = comp, \x[1]~input\, x[1]~input, parallel_decoder, 1
instance = comp, \x[3]~input\, x[3]~input, parallel_decoder, 1
instance = comp, \m2_c[1]\, m2_c[1], parallel_decoder, 1
instance = comp, \x[6]~input\, x[6]~input, parallel_decoder, 1
instance = comp, \x[4]~input\, x[4]~input, parallel_decoder, 1
instance = comp, \m2_c[2]\, m2_c[2], parallel_decoder, 1
instance = comp, \x[0]~input\, x[0]~input, parallel_decoder, 1
instance = comp, \x[2]~input\, x[2]~input, parallel_decoder, 1
instance = comp, \m2_c[0]\, m2_c[0], parallel_decoder, 1
instance = comp, \x[5]~input\, x[5]~input, parallel_decoder, 1
instance = comp, \x[7]~input\, x[7]~input, parallel_decoder, 1
instance = comp, \m2_c[3]\, m2_c[3], parallel_decoder, 1
instance = comp, \m_partial_encoder[2]~1\, m_partial_encoder[2]~1, parallel_decoder, 1
instance = comp, \m3_c[0]~2\, m3_c[0]~2, parallel_decoder, 1
instance = comp, \m3_c[2]~0\, m3_c[2]~0, parallel_decoder, 1
instance = comp, \m3_c[3]~1\, m3_c[3]~1, parallel_decoder, 1
instance = comp, \m3_c[1]~3\, m3_c[1]~3, parallel_decoder, 1
instance = comp, \m_partial_encoder[3]~0\, m_partial_encoder[3]~0, parallel_decoder, 1
instance = comp, \pop|hA02|and20|y\, pop|hA02|and20|y, parallel_decoder, 1
instance = comp, \pop|fA11|fA0|and20|y\, pop|fA11|fA0|and20|y, parallel_decoder, 1
instance = comp, \pop|fA20|hA0|and20|y\, pop|fA20|hA0|and20|y, parallel_decoder, 1
instance = comp, \pop|fA20|fA10|or20|y~1\, pop|fA20|fA10|or20|y~1, parallel_decoder, 1
instance = comp, \m1_c[3]\, m1_c[3], parallel_decoder, 1
instance = comp, \m1_c[0]\, m1_c[0], parallel_decoder, 1
instance = comp, \m1_c[2]\, m1_c[2], parallel_decoder, 1
instance = comp, \m1_c[1]\, m1_c[1], parallel_decoder, 1
instance = comp, \m_partial_encoder[1]~2\, m_partial_encoder[1]~2, parallel_decoder, 1
instance = comp, \pop|hA01|and20|y\, pop|hA01|and20|y, parallel_decoder, 1
instance = comp, \part_encoder|o[1]\, part_encoder|o[1], parallel_decoder, 1
instance = comp, \pop|hA00|and20|y\, pop|hA00|and20|y, parallel_decoder, 1
instance = comp, \pop|fA10|hA0|and20|y\, pop|fA10|hA0|and20|y, parallel_decoder, 1
instance = comp, \pop|fA20|fA10|or20|y~0\, pop|fA20|fA10|or20|y~0, parallel_decoder, 1
instance = comp, \pop|fA20|fA10|or20|y~2\, pop|fA20|fA10|or20|y~2, parallel_decoder, 1
instance = comp, \m1_v~0\, m1_v~0, parallel_decoder, 1
instance = comp, \m2_v~0\, m2_v~0, parallel_decoder, 1
instance = comp, \m3_v~0\, m3_v~0, parallel_decoder, 1
instance = comp, \m_v~0\, m_v~0, parallel_decoder, 1
instance = comp, \pop|fA10|fA0|and20|y\, pop|fA10|fA0|and20|y, parallel_decoder, 1
instance = comp, \m~0\, m~0, parallel_decoder, 1
instance = comp, \m~1\, m~1, parallel_decoder, 1
instance = comp, \m~2\, m~2, parallel_decoder, 1
instance = comp, \m~3\, m~3, parallel_decoder, 1
